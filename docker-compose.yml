services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      JWT_SECRET: ${JWT_SECRET}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASS: ${SMTP_PASS}
      FRONTEND_URL: ${FRONTEND_URL}
      ELASTICSEARCH_HOST: elasticsearch
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
      MONGO_URI: mongodb://127.0.0.1:27017/authorization # MongoDB connection URI
    depends_on:
      - mysql
      - redis
      - elasticsearch
      - mongo

  mysql:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false # Disable security for simplicity (not recommended for production)
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

  sonarqube:
    image: sonarqube:community
    environment:
      SONAR_JDBC_URL: jdbc:mysql://mysql:3306/${DB_NAME}?useSSL=false
      SONAR_JDBC_USERNAME: root
      SONAR_JDBC_PASSWORD: ${DB_PASSWORD}
    ports:
      - "9000:9000"
    depends_on:
      - mysql

  mongo:
    image: mongo:latest
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

volumes:
  mysql_data:
  elasticsearch_data:
  mongo_data:
